# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import test_pb2 as test__pb2


class TestServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetOneToOne = channel.unary_unary(
        '/rxgrpc.test.TestService/GetOneToOne',
        request_serializer=test__pb2.TestRequest.SerializeToString,
        response_deserializer=test__pb2.TestResponse.FromString,
        )
    self.GetOneToStream = channel.unary_stream(
        '/rxgrpc.test.TestService/GetOneToStream',
        request_serializer=test__pb2.TestRequest.SerializeToString,
        response_deserializer=test__pb2.TestResponse.FromString,
        )
    self.GetStreamToOne = channel.stream_unary(
        '/rxgrpc.test.TestService/GetStreamToOne',
        request_serializer=test__pb2.TestRequest.SerializeToString,
        response_deserializer=test__pb2.TestResponse.FromString,
        )
    self.GetStreamToStream = channel.stream_stream(
        '/rxgrpc.test.TestService/GetStreamToStream',
        request_serializer=test__pb2.TestRequest.SerializeToString,
        response_deserializer=test__pb2.TestRequest.FromString,
        )


class TestServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetOneToOne(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOneToStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStreamToOne(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStreamToStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TestServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetOneToOne': grpc.unary_unary_rpc_method_handler(
          servicer.GetOneToOne,
          request_deserializer=test__pb2.TestRequest.FromString,
          response_serializer=test__pb2.TestResponse.SerializeToString,
      ),
      'GetOneToStream': grpc.unary_stream_rpc_method_handler(
          servicer.GetOneToStream,
          request_deserializer=test__pb2.TestRequest.FromString,
          response_serializer=test__pb2.TestResponse.SerializeToString,
      ),
      'GetStreamToOne': grpc.stream_unary_rpc_method_handler(
          servicer.GetStreamToOne,
          request_deserializer=test__pb2.TestRequest.FromString,
          response_serializer=test__pb2.TestResponse.SerializeToString,
      ),
      'GetStreamToStream': grpc.stream_stream_rpc_method_handler(
          servicer.GetStreamToStream,
          request_deserializer=test__pb2.TestRequest.FromString,
          response_serializer=test__pb2.TestRequest.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'rxgrpc.test.TestService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
